package intranet;

import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 2class-004
 */
public class Msg extends javax.swing.JFrame {

	/**
	 * Creates new form Msg
	 */
	MsgDAO dao = new MsgDAO();
	int selectedRcvMsg, selectedSendMsg;
	ArrayList<MsgVO> rcvMsgList = null, sendMsgList = null;
	CardLayout card;
	EmpSelect selectEmp = new EmpSelect(this);
	int ownerId;
	int selectedEmpId;
	String selectedEmpName;

	public Msg(EmpVO owner) {
		initComponents();
		this.ownerId = owner.getEmpId();
		String msgTableName = "msg" + ownerId;
		Date today = new Date();

		if (msgTableName != null) {
			dao.setMsgTableName(msgTableName);
		} else
			return;

		rcvMsgList = dao.listMsg("R");
		// R : receivedMsg
		showTable(rcvMsgList, tabRcvList, 0);

		sendMsgList = dao.listMsg("S");
		// S : sentMsg
		showTable(sendMsgList, tabSendList, 1);

	}

	public Object getId(int tabNumber) {
		Object objId = null;
		switch (tabNumber) {
		case 0:
			objId = tabRcvList.getValueAt(tabRcvList.getSelectedRow(), 0);
			break;
		case 1:
			objId = tabSendList.getValueAt(tabSendList.getSelectedRow(), 0);
			break;
		default:
		}
		return objId;
	}

	public void reflashTable(int tabNumber) {
		switch (tabNumber) {
		case 0:
			rcvMsgList = dao.listMsg("R");
			showTable(rcvMsgList, tabRcvList, 0);
			break;
		case 1:
			sendMsgList = dao.listMsg("S");
			showTable(sendMsgList, tabSendList, 1);
			break;
		default:
		}
	}

	public void showTable(ArrayList<MsgVO> arr, javax.swing.JTable tabList, int s_R) {
		// 1. DefaultTableModel 객체 생성해서 담기
    	// 2. table 모델 설정
		Object[][] tableContents = new Object[arr.size()][5];
		for (int i = 0; i < tableContents.length; i++) {
			MsgVO msg = arr.get(i);
			tableContents[i][0] = msg.getMsgid();
			tableContents[i][1] = msg.getSdate();
			tableContents[i][2] = msg.getEname();
			tableContents[i][3] = msg.getTitle();
			tableContents[i][4] = msg.getrD();
		}
		String[] rcvTitle = { "번호", "날짜/시간", "보낸사람", "쪽지제목", "읽은상태" };
		String[] sendTitle = { "번호", "날짜/시간", "받은사람", "쪽지제목", "읽은상태" };
		DefaultTableModel tableModel = null;
		if (s_R == 0)
			tableModel = new DefaultTableModel(tableContents, rcvTitle);
		else
			tableModel = new DefaultTableModel(tableContents, sendTitle);

		tabList.setModel(tableModel);
		tabList.setRowHeight(25);
//		MyRenderer cr = new MyRenderer();
//		tabList.setDefaultRenderer(String.class, cr);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		pMsg = new javax.swing.JPanel();
		pMsgList = new javax.swing.JPanel();
		mm_lbHeader = new javax.swing.JLabel();
		mm_tpList = new javax.swing.JTabbedPane();
		spRcvList = new javax.swing.JScrollPane();
		tabRcvList = new javax.swing.JTable();
		spSendList = new javax.swing.JScrollPane();
		tabSendList = new javax.swing.JTable();
		mm_btWrite = new javax.swing.JButton();
		mm_btDel = new javax.swing.JButton();
		mm_cbSel = new javax.swing.JComboBox<>();
		mm_tf = new javax.swing.JTextField();
		mm_btSearch = new javax.swing.JButton();
		mm_btView = new javax.swing.JButton();
		pMsgRead = new javax.swing.JPanel();
		mr_JPanel = new javax.swing.JPanel();
		mr_lbTitle = new javax.swing.JLabel();
		mr_tfTitle = new javax.swing.JTextField();
		mr_lbSentId = new javax.swing.JLabel();
		mr_tfSentName = new javax.swing.JTextField();
		mr_spText = new javax.swing.JScrollPane();
		mr_taText = new javax.swing.JTextArea();
		mr_btBacktoList = new javax.swing.JButton();
		mr_btReply = new javax.swing.JButton();
		mr_btDel = new javax.swing.JButton();
		mr_lbHeader = new javax.swing.JLabel();
		pMsgWrite = new javax.swing.JPanel();
		mw_JPanel = new javax.swing.JPanel();
		mw_lbTitle = new javax.swing.JLabel();
		mw_tfTitle = new javax.swing.JTextField();
		mw_lbReceiveId = new javax.swing.JLabel();
		mw_tfReceiveId = new javax.swing.JTextField();
		mw_spText = new javax.swing.JScrollPane();
		mw_taText = new javax.swing.JTextArea();
		mw_btBacktoList = new javax.swing.JButton();
		mw_btSend = new javax.swing.JButton();
		mw_btSearch = new javax.swing.JButton();
		mw_lbHeader = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		pMsg.setLayout(card = new java.awt.CardLayout());

		mm_lbHeader.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
		mm_lbHeader.setText("내 쪽지함");

		tabRcvList
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "번호", "날짜/시간", "보낸사람", "쪽지내용" }));
		spRcvList.setViewportView(tabRcvList);

		mm_tpList.addTab("받은 쪽지함", spRcvList);

		tabSendList
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "번호", "날짜/시간", "받는사람", "쪽지내용" }));
		spSendList.setViewportView(tabSendList);

		mm_tpList.addTab("보낸 쪽지함", spSendList);

		mm_btWrite.setText("쪽지 보내기");
		mm_btWrite.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mm_btWriteActionPerformed(evt);
			}
		});

		mm_btDel.setText("삭제");
		mm_btDel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mm_btDelActionPerformed(evt);
			}
		});

		mm_cbSel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "사원번호", "작성자", "작성일", "쪽지내용" }));

		mm_btSearch.setText("검색");
		mm_btSearch.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mm_btSearchActionPerformed(evt);
			}
		});

		mm_btView.setText("내용보기");
		mm_btView.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mm_btViewActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pMsgListLayout = new javax.swing.GroupLayout(pMsgList);
		pMsgList.setLayout(pMsgListLayout);
		pMsgListLayout.setHorizontalGroup(pMsgListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pMsgListLayout.createSequentialGroup().addGap(27, 27, 27).addGroup(pMsgListLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pMsgListLayout.createSequentialGroup()
								.addGroup(pMsgListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(pMsgListLayout.createSequentialGroup()
												.addComponent(mm_cbSel, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(mm_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 190,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(mm_btSearch,
														javax.swing.GroupLayout.PREFERRED_SIZE, 74,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addComponent(mm_lbHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 78,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(mm_tpList, javax.swing.GroupLayout.PREFERRED_SIZE, 376,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap(29, Short.MAX_VALUE))
						.addGroup(pMsgListLayout.createSequentialGroup().addComponent(mm_btWrite)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(mm_btDel)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(mm_btView).addGap(44, 44, 44)))));
		pMsgListLayout.setVerticalGroup(pMsgListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pMsgListLayout.createSequentialGroup().addContainerGap()
						.addComponent(mm_lbHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(pMsgListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(mm_cbSel, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(mm_tf, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(mm_btSearch))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(mm_tpList, javax.swing.GroupLayout.PREFERRED_SIZE, 326,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(pMsgListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(mm_btDel).addComponent(mm_btWrite).addComponent(mm_btView))
						.addContainerGap()));

		pMsg.add(pMsgList, "card1");

		mr_lbTitle.setText("제목");

		mr_lbSentId.setText("받는 사람");

		mr_taText.setColumns(20);
		mr_taText.setRows(5);
		mr_spText.setViewportView(mr_taText);

		mr_btBacktoList.setText("글목록");
		mr_btBacktoList.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mr_btBacktoListActionPerformed(evt);
			}
		});

		mr_btReply.setText("답장");
		mr_btReply.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mr_btReplyActionPerformed(evt);
			}
		});

		mr_btDel.setText("삭제");
		mr_btDel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mr_btDelActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout mr_JPanelLayout = new javax.swing.GroupLayout(mr_JPanel);
		mr_JPanel.setLayout(mr_JPanelLayout);
		mr_JPanelLayout.setHorizontalGroup(mr_JPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(mr_JPanelLayout.createSequentialGroup().addContainerGap().addGroup(mr_JPanelLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(mr_JPanelLayout.createSequentialGroup().addComponent(mr_btBacktoList)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(mr_btReply)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(mr_btDel))
						.addGroup(mr_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addComponent(mr_spText, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING, mr_JPanelLayout
										.createSequentialGroup()
										.addGroup(mr_JPanelLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(mr_lbSentId).addComponent(mr_lbTitle))
										.addGap(18, 18, 18)
										.addGroup(mr_JPanelLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(mr_tfSentName, javax.swing.GroupLayout.DEFAULT_SIZE, 298,
														Short.MAX_VALUE)
												.addComponent(mr_tfTitle)))))
						.addContainerGap(23, Short.MAX_VALUE)));
		mr_JPanelLayout.setVerticalGroup(mr_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(mr_JPanelLayout.createSequentialGroup().addContainerGap()
						.addGroup(mr_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(mr_lbTitle)
								.addComponent(mr_tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(5, 5, 5)
						.addGroup(mr_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(mr_lbSentId)
								.addComponent(mr_tfSentName, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addComponent(mr_spText, javax.swing.GroupLayout.PREFERRED_SIZE, 274,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(mr_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(mr_btReply).addComponent(mr_btBacktoList).addComponent(mr_btDel))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		mr_lbHeader.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
		mr_lbHeader.setText("내 쪽지함");

		javax.swing.GroupLayout pMsgReadLayout = new javax.swing.GroupLayout(pMsgRead);
		pMsgRead.setLayout(pMsgReadLayout);
		pMsgReadLayout.setHorizontalGroup(pMsgReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pMsgReadLayout.createSequentialGroup().addGroup(pMsgReadLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pMsgReadLayout.createSequentialGroup().addGap(25, 25, 25).addComponent(mr_lbHeader))
						.addGroup(pMsgReadLayout.createSequentialGroup().addContainerGap().addComponent(mr_JPanel,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		pMsgReadLayout.setVerticalGroup(pMsgReadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pMsgReadLayout.createSequentialGroup().addContainerGap()
						.addComponent(mr_lbHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(mr_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		pMsg.add(pMsgRead, "card2");

		mw_lbTitle.setText("제목");

		mw_lbReceiveId.setText("받는 사람");

		mw_taText.setColumns(20);
		mw_taText.setRows(5);
		mw_spText.setViewportView(mw_taText);

		mw_btBacktoList.setText("글목록");
		mw_btBacktoList.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mw_btBacktoListActionPerformed(evt);
			}
		});

		mw_btSend.setText("전송");
		mw_btSend.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mw_btSendActionPerformed(evt);
			}
		});
		
        mw_btSearch.setText("사원찾기");
        mw_btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mw_btSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mw_JPanelLayout = new javax.swing.GroupLayout(mw_JPanel);
        mw_JPanel.setLayout(mw_JPanelLayout);
        mw_JPanelLayout.setHorizontalGroup(
            mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mw_JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mw_JPanelLayout.createSequentialGroup()
                        .addComponent(mw_btBacktoList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mw_btSend))
                    .addGroup(mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(mw_spText)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mw_JPanelLayout.createSequentialGroup()
                            .addGroup(mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mw_lbReceiveId)
                                .addComponent(mw_lbTitle))
                            .addGap(18, 18, 18)
                            .addGroup(mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(mw_JPanelLayout.createSequentialGroup()
                                    .addComponent(mw_tfReceiveId, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(mw_btSearch))
                                .addComponent(mw_tfTitle)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        mw_JPanelLayout.setVerticalGroup(
            mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mw_JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mw_lbTitle)
                    .addComponent(mw_tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mw_lbReceiveId)
                    .addComponent(mw_tfReceiveId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mw_btSearch))
                .addGap(18, 18, 18)
                .addComponent(mw_spText, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mw_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mw_btSend)
                    .addComponent(mw_btBacktoList))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

		mw_lbHeader.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
		mw_lbHeader.setText("내 쪽지함");

		javax.swing.GroupLayout pMsgWriteLayout = new javax.swing.GroupLayout(pMsgWrite);
		pMsgWrite.setLayout(pMsgWriteLayout);
		pMsgWriteLayout.setHorizontalGroup(pMsgWriteLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pMsgWriteLayout.createSequentialGroup().addGroup(pMsgWriteLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pMsgWriteLayout.createSequentialGroup().addGap(25, 25, 25).addComponent(mw_lbHeader))
						.addGroup(pMsgWriteLayout.createSequentialGroup().addContainerGap().addComponent(mw_JPanel,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		pMsgWriteLayout.setVerticalGroup(pMsgWriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pMsgWriteLayout.createSequentialGroup().addContainerGap()
						.addComponent(mw_lbHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(mw_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		pMsg.add(pMsgWrite, "card3");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				pMsg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(pMsg,
				javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>

	private void mm_btSearchActionPerformed(java.awt.event.ActionEvent evt) {
		// ComboBox에서 선택된 항목 가져옴 (0:사원번호, 1:사원이름, 2:쪽지내용)
		int n = mm_cbSel.getSelectedIndex();
		int currentTab = mm_tpList.getSelectedIndex();
		String s_R=null;
		if (currentTab==0) s_R="R";
		else s_R="S";

		// 검색어 얻어오기
		String keyword = mm_tf.getText();

		// System.out.println(keyword);
		// DB에서 서치결과 가져옴
		ArrayList<MsgVO> arr = null;
		int empid = 0;
		if (n == 0) {
			try {
				empid = Integer.parseInt(keyword.trim());
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(this, "사원번호는 숫자를 입력하세요.");
				return;
			}
			arr = dao.findMsg(s_R, empid);
			//System.out.println(arr.toString());
			//System.out.println(arr.size());
		} else {
			keyword = "%" + keyword.trim() + "%";
			arr = dao.findMsg(n, s_R, keyword);
		}
		// EMPLIST테이블에 보여줌 (null 처리 추가), EMP Tab을 보여줌
		// System.out.println(arr);
		if (arr.size() == 0) {
			JOptionPane.showMessageDialog(this, "검색된 쪽지가 존재하지 않습니다.");
		} else {
			if(n==0) showTable(arr, tabRcvList, 0);
			else showTable(arr, tabSendList, 1);
		}

	}

	private void mm_btWriteActionPerformed(java.awt.event.ActionEvent evt) {
		// 글번호 선택했는지 확인
		// 현재 선택된 탭(rcvMsg or sendMsg) 확인하기
		int currentTab = mm_tpList.getSelectedIndex();
		// 선택한 글번호 가져오기
		// 선택한 글번호의 empid 가져오기

		MsgVO tempVO = null;
		card.show(pMsg, "card3");
		try {
			if (currentTab == 0) {
				Integer id = tabRcvList.getSelectedRow();
				tempVO = rcvMsgList.get(id.intValue());
			} else {
				Integer id = tabSendList.getSelectedRow();
				tempVO = sendMsgList.get(id.intValue());
			}
			selectedEmpId = tempVO.getEmpid();
			selectedEmpName = tempVO.getEname();
			mw_tfReceiveId.setText(selectedEmpName);
		} catch (ArrayIndexOutOfBoundsException e) {
			selectEmp.setVisible(true);
		} finally {
			// System.out.println(selectedEmpName);
		}
	} // ----------------------------------------완료

	private void mm_btDelActionPerformed(java.awt.event.ActionEvent evt) {
		// 현재 선택된 탭(rcvMsg or sendMsg) 확인하기
		int currentTab = mm_tpList.getSelectedIndex();
		// 선택한 글번호 가져오기
		Integer id = (Integer) getId(currentTab);
		// 선택한 메시지 지우기
		int r = dao.deleteMsg(id);
		if (r == -1) {
			JOptionPane.showMessageDialog(this, "이미 지워졌거나 없는 쪽지입니다.");
		}
		// 메시지 다시 보여주기
		reflashTable(currentTab);
	} // ----------------------------------------완료

	private void mm_btViewActionPerformed(java.awt.event.ActionEvent evt) {
		int currentTab = mm_tpList.getSelectedIndex();
		// 선택한 메시지 가져와서 보여주기
		MsgVO tempVO = null;
		try {
			if (currentTab == 0) {
				Integer id = tabRcvList.getSelectedRow();
				tempVO = rcvMsgList.get(id.intValue());
			} else {
				Integer id = tabSendList.getSelectedRow();
				tempVO = sendMsgList.get(id.intValue());
			}
			selectedEmpId = tempVO.getEmpid();
			selectedEmpName = tempVO.getEname();
			mr_tfSentName.setText(selectedEmpName);
			mr_tfTitle.setText(tempVO.getTitle());
			mr_taText.setText(tempVO.getMsg());
		} catch (ArrayIndexOutOfBoundsException e) {
		}
		card.show(pMsg, "card2");
	} // ----------------------------------------완료

	private void mr_btBacktoListActionPerformed(java.awt.event.ActionEvent evt) {
		int currentTab = mm_tpList.getSelectedIndex();
		MsgVO tempVO = null;
		try {
			if (currentTab == 0) {
				Integer id = tabRcvList.getSelectedRow();
				tempVO = rcvMsgList.get(id.intValue());
			} else {
				Integer id = tabSendList.getSelectedRow();
				tempVO = sendMsgList.get(id.intValue());
			}
			int selectedMsgId = tempVO.getMsgid();
			int r = dao.readMsg(selectedMsgId, ownerId);
			if (r == -1) {
				JOptionPane.showMessageDialog(this, "이미 지워졌거나 없는 쪽지입니다.");
			}
		} catch (ArrayIndexOutOfBoundsException e) {
		}
		
		reflashTable(currentTab);
		card.show(pMsg, "card1");
	} // ----------------------------------------완료

	private void mr_btReplyActionPerformed(java.awt.event.ActionEvent evt) {
		// 글번호 선택했는지 확인
		// 현재 선택된 탭(rcvMsg or sendMsg) 확인하기
		int currentTab = mm_tpList.getSelectedIndex();
		// 선택한 글번호 가져오기
		// 선택한 글번호의 empid 가져오기
		MsgVO tempVO = null;
		try {
			if (currentTab == 0) {
				Integer id = tabRcvList.getSelectedRow();
				tempVO = rcvMsgList.get(id.intValue());
			} else {
				Integer id = tabSendList.getSelectedRow();
				tempVO = sendMsgList.get(id.intValue());
			}
			selectedEmpId = tempVO.getEmpid();
			selectedEmpName = tempVO.getEname();
		} catch (ArrayIndexOutOfBoundsException e) {
		}
		// System.out.println(selectedEmpName);
		mw_tfReceiveId.setText(selectedEmpName);
		card.show(pMsg, "card3");
	} // ----------------------------------------완료

	private void mr_btDelActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		int currentTab = mm_tpList.getSelectedIndex();
		// 선택한 글번호 가져오기
		Integer id = (Integer) getId(currentTab);
		// 선택한 메시지 지우기
		int r = dao.deleteMsg(id);
		// 메시지 다시 보여주기
		if (r == -1) {
			JOptionPane.showMessageDialog(this, "이미 지워졌거나 없는 쪽지입니다.");
		}
		reflashTable(currentTab);
		// 메모리스트로 돌아가기
		card.show(pMsg, "card1");
	} // ----------------------------------------완료
	
    private void mw_btSearchActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	selectEmp.setVisible(true);
    } // ----------------------------------------완료                                          

	private void mw_btBacktoListActionPerformed(java.awt.event.ActionEvent evt) {
		int currentTab = mm_tpList.getSelectedIndex();
		reflashTable(currentTab);
		card.show(pMsg, "card1");
	} // ----------------------------------------완료

	private void mw_btSendActionPerformed(java.awt.event.ActionEvent evt) {
		Date today = new Date();
		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		String str = df.format(today);
		// 작성한 메시지의 내용 읽어오기
		String title = mw_tfTitle.getText();
		String msg = mw_taText.getText();
		MsgVO tempVO = new MsgVO("S", selectedEmpId, title, msg, "RD");
		// System.out.println(tempVO.toString());
		// 본인의 msg 테이블에 보낸 메시지 추가하기
		int n = dao.insertMsg(tempVO, ownerId);
		// System.out.println(n);
		// 받은 사람 msg 테이블에 받은 메시지 추가하기

		tempVO.setS_R("R");
		tempVO.setrD("NR");
		tempVO.setEmpid(ownerId);
		
		n = dao.insertMsg(tempVO, selectedEmpId);
		// 본인의 보낸메시지 리스트 출력하기
		sendMsgList = dao.listMsg("S");
		showTable(sendMsgList, tabSendList, 1);

		// 현재 선택된 탭(rcvMsg or sendMsg) 확인하기
		card.show(pMsg, "card1");
		mm_tpList.setSelectedIndex(1);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Msg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Msg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Msg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Msg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				EmpVO owner=new EmpVO(1501);
				new Msg(owner).setVisible(true);
			}
		});
	}

	private javax.swing.JButton mm_btDel;
	private javax.swing.JButton mm_btSearch;
	private javax.swing.JButton mm_btView;
	private javax.swing.JButton mm_btWrite;
	private javax.swing.JComboBox<String> mm_cbSel;
	private javax.swing.JLabel mm_lbHeader;
	private javax.swing.JTextField mm_tf;
	private javax.swing.JTabbedPane mm_tpList;
	private javax.swing.JPanel mr_JPanel;
	private javax.swing.JButton mr_btBacktoList;
	private javax.swing.JButton mr_btDel;
	private javax.swing.JButton mr_btReply;
	private javax.swing.JLabel mr_lbHeader;
	private javax.swing.JLabel mr_lbSentId;
	private javax.swing.JLabel mr_lbTitle;
	private javax.swing.JScrollPane mr_spText;
	private javax.swing.JTextArea mr_taText;
	private javax.swing.JTextField mr_tfSentName;
	private javax.swing.JTextField mr_tfTitle;
	private javax.swing.JPanel mw_JPanel;
	private javax.swing.JButton mw_btBacktoList;
	private javax.swing.JButton mw_btSearch;
	private javax.swing.JButton mw_btSend;
	private javax.swing.JLabel mw_lbHeader;
	private javax.swing.JLabel mw_lbReceiveId;
	private javax.swing.JLabel mw_lbTitle;
	private javax.swing.JScrollPane mw_spText;
	private javax.swing.JTextArea mw_taText;
	javax.swing.JTextField mw_tfReceiveId;
	private javax.swing.JTextField mw_tfTitle;
	private javax.swing.JPanel pMsg;
	private javax.swing.JPanel pMsgList;
	private javax.swing.JPanel pMsgRead;
	private javax.swing.JPanel pMsgWrite;
	private javax.swing.JScrollPane spRcvList;
	private javax.swing.JScrollPane spSendList;
	private javax.swing.JTable tabRcvList;
	private javax.swing.JTable tabSendList;
	// End of variables declaration
}
